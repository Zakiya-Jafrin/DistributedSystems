package EventManagementIDLApp;


/**
* EventManagementIDLApp/_EventManagementIDLStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from /Users/zakiyajafrin/Documents/COMP6231-DS/CORBA_Assignment/src/EventManagementIDL.idl
* Wednesday, July 10, 2019 12:54:52 o'clock PM EDT
*/


//    typedef sequence<string> KeyValSeq;
public class _EventManagementIDLStub extends org.omg.CORBA.portable.ObjectImpl implements EventManagementIDLApp.EventManagementIDL
{

  public boolean addEvent (String managerID, String eventID, String eventType, int bookingCapacity)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addEvent", true);
                $out.write_string (managerID);
                $out.write_string (eventID);
                $out.write_string (eventType);
                $out.write_long (bookingCapacity);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return addEvent (managerID, eventID, eventType, bookingCapacity        );
            } finally {
                _releaseReply ($in);
            }
  } // addEvent

  public boolean removeEvent (String managerID, String eventID, String eventType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("removeEvent", true);
                $out.write_string (managerID);
                $out.write_string (eventID);
                $out.write_string (eventType);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return removeEvent (managerID, eventID, eventType        );
            } finally {
                _releaseReply ($in);
            }
  } // removeEvent

  public String[] listEventAvailability (String managerID, String eventType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("listEventAvailability", true);
                $out.write_string (managerID);
                $out.write_string (eventType);
                $in = _invoke ($out);
                String $result[] = EventManagementIDLApp.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return listEventAvailability (managerID, eventType        );
            } finally {
                _releaseReply ($in);
            }
  } // listEventAvailability

  public String[] bookEvent (String customerId, String eventId, String eventType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("bookEvent", true);
                $out.write_string (customerId);
                $out.write_string (eventId);
                $out.write_string (eventType);
                $in = _invoke ($out);
                String $result[] = EventManagementIDLApp.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return bookEvent (customerId, eventId, eventType        );
            } finally {
                _releaseReply ($in);
            }
  } // bookEvent

  public String[] cancelEvent (String customerId, String eventId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("cancelEvent", true);
                $out.write_string (customerId);
                $out.write_string (eventId);
                $in = _invoke ($out);
                String $result[] = EventManagementIDLApp.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return cancelEvent (customerId, eventId        );
            } finally {
                _releaseReply ($in);
            }
  } // cancelEvent

  public String[] getBookingSchedule (String customerId)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBookingSchedule", true);
                $out.write_string (customerId);
                $in = _invoke ($out);
                String $result[] = EventManagementIDLApp.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBookingSchedule (customerId        );
            } finally {
                _releaseReply ($in);
            }
  } // getBookingSchedule

  public String[] swapEvent (String customerId, String newEventId, String newEventType, String oldEventId, String oldEventType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("swapEvent", true);
                $out.write_string (customerId);
                $out.write_string (newEventId);
                $out.write_string (newEventType);
                $out.write_string (oldEventId);
                $out.write_string (oldEventType);
                $in = _invoke ($out);
                String $result[] = EventManagementIDLApp.ResultListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return swapEvent (customerId, newEventId, newEventType, oldEventId, oldEventType        );
            } finally {
                _releaseReply ($in);
            }
  } // swapEvent


  //	    boolean AddUser(in string ID);
  public void shutdown ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("shutdown", false);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                shutdown (        );
            } finally {
                _releaseReply ($in);
            }
  } // shutdown

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:EventManagementIDLApp/EventManagementIDL:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _EventManagementIDLStub
